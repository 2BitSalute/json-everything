<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JsonSchema.Net.Data</name>
    </assembly>
    <members>
        <member name="T:Json.Schema.Data.DataKeyword">
            <summary>
            Represents the `data` keyword.
            </summary>
        </member>
        <member name="P:Json.Schema.Data.DataKeyword.Get">
            <summary>
            Gets or sets a method to download external references.
            </summary>
            <remarks>
            The default method simply attempts to download the resource.  There is no
            caching involved.
            </remarks>
        </member>
        <member name="P:Json.Schema.Data.DataKeyword.References">
            <summary>
            The collection of keywords and references.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Uri})">
            <summary>
            Creates an instance of the <see cref="T:Json.Schema.Data.DataKeyword"/> class.
            </summary>
            <param name="references">The collection of keywords and references.</param>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.Validate(Json.Schema.ValidationContext)">
            <summary>
            Provides validation for the keyword.
            </summary>
            <param name="context">Contextual details for the validation process.</param>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.Equals(Json.Schema.Data.DataKeyword)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object  is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Json.Schema.Data.DataKeyword.GetHashCode">
            <summary>Serves as the default hash function.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:Json.Schema.Data.JsonSchemaBuilderExtensions">
            <summary>
            Provides a fluent interface for <see cref="T:Json.Schema.JsonSchemaBuilder"/>.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.JsonSchemaBuilderExtensions.Data(Json.Schema.JsonSchemaBuilder,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Uri})">
            <summary>
            Adds a `data` keyword.
            </summary>
            <param name="builder">The builder.</param>
            <param name="data">The collection of keywords and references.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Json.Schema.Data.JsonSchemaBuilderExtensions.Data(Json.Schema.JsonSchemaBuilder,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Adds a `data` keyword.
            </summary>
            <param name="builder">The builder.</param>
            <param name="data">The collection of keywords and references.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Json.Schema.Data.JsonSchemaBuilderExtensions.Data(Json.Schema.JsonSchemaBuilder,System.ValueTuple{System.String,System.Uri}[])">
            <summary>
            Adds a `data` keyword.
            </summary>
            <param name="builder">The builder.</param>
            <param name="data">The collection of keywords and references.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:Json.Schema.Data.JsonSchemaBuilderExtensions.Data(Json.Schema.JsonSchemaBuilder,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Adds a `data` keyword.
            </summary>
            <param name="builder">The builder.</param>
            <param name="data">The collection of keywords and references.</param>
            <returns>The builder.</returns>
        </member>
        <member name="T:Json.Schema.Data.MetaSchemas">
            <summary>
            Defines a meta-schema for the 
            </summary>
        </member>
        <member name="F:Json.Schema.Data.MetaSchemas.DataId">
            <summary>
            The data vocabulary meta-schema ID.
            </summary>
        </member>
        <member name="F:Json.Schema.Data.MetaSchemas.Data">
            <summary>
            The data vocabulary meta-schema.
            </summary>
        </member>
        <member name="T:Json.Schema.Data.Vocabularies">
            <summary>
            Declares the vocabularies of the supported drafts.
            </summary>
        </member>
        <member name="F:Json.Schema.Data.Vocabularies.DataId">
            <summary>
            The data vocabulary ID.
            </summary>
        </member>
        <member name="F:Json.Schema.Data.Vocabularies.Data">
            <summary>
            The data vocabulary.
            </summary>
        </member>
        <member name="M:Json.Schema.Data.Vocabularies.Register(Json.Schema.VocabularyRegistry,Json.Schema.SchemaRegistry)">
            <summary>
            Registers the all components required to use the data vocabulary.
            </summary>
        </member>
    </members>
</doc>
